---
import { getCollection } from "astro:content";

interface Props {
    limit?: number;
    showAll?: boolean;
}

const { limit = 5, showAll = false } = Astro.props;

// Get all posts (non-draft)
const allPosts = await getCollection("posts", ({ data }) => !data.draft);

// Filter featured posts first, then regular posts
const featuredPosts = allPosts.filter(({ data }) => data.featured);
const regularPosts = allPosts.filter(({ data }) => !data.featured);

// Combine featured posts first, then regular posts
const posts = [...featuredPosts, ...regularPosts];

// Sort by date and limit results
const displayPosts = posts
    .sort(
        (a, b) =>
            new Date(b.data.date).getTime() - new Date(a.data.date).getTime(),
    )
    .slice(0, showAll ? posts.length : limit);
---

<section class="mb-8">
    <h2
        class="text-xs font-bold text-gray-600 mb-2 border-b border-dotted border-gray-400"
    >
        {showAll ? "All Articles" : "Recent Articles"}
    </h2>

    {displayPosts.length === 0 && (
        <p class="text-xs text-gray-600">No posts available.</p>
    )}

    <div class="space-y-3">
        {
            displayPosts.map((post) => (
                <article class="border-b border-gray-200 pb-2 last:border-b-0">
                    <h3 class="text-xs font-bold text-teal-600 mb-1">
                        <a
                            href={`/posts/${post.id}/`}
                            class="hover:text-green-600 transition-colors"
                        >
                            {post.data.title}
                            {post.data.featured && (
                                <span class="ml-1 inline-block w-2 h-2 bg-green-500 rounded-full" title="Featured post"></span>
                            )}
                        </a>
                    </h3>
                    <div class="text-xs text-gray-600 mb-1 flex flex-wrap gap-1">
                        <time datetime={post.data.date.toISOString()}>
                            {post.data.date.toLocaleDateString("en-US", {
                                year: "numeric",
                                month: "short",
                                day: "numeric",
                            })}
                        </time>
                        {post.data.author && (
                            <>
                                <span class="text-gray-400">|</span>
                                <span>By {post.data.author}</span>
                            </>
                        )}
                        {post.data.category && (
                            <>
                                <span class="text-gray-400">|</span>
                                <span>
                                    <a
                                        href={`/posts/category/${post.data.category}/`}
                                        class="text-teal-600 hover:underline"
                                    >
                                        {post.data.category}
                                    </a>
                                </span>
                            </>
                        )}
                    </div>
                    {post.data.excerpt && (
                        <p class="text-xs text-gray-700 mt-1 leading-relaxed">
                            {post.data.excerpt}
                        </p>
                    )}
                </article>
            ))
        }
    </div>

    {!showAll && (
        <div class="mt-3">
            <a
                href="/posts/"
                class="text-xs text-teal-600 hover:text-green-600 font-bold transition-colors"
            >
                View All Posts â†’
            </a>
        </div>
    )}
</section>
