---
import { getCollection } from 'astro:content';
import BaseLayout from '../../../layouts/BaseLayout.astro';

export async function getStaticPaths() {
    // Get all unique categories from post paths
    const posts = await getCollection('posts');
    const categories = [...new Set(posts.map(post => post.id.split('/')[0]))];

    return categories.map(category => ({
        params: { category },
        props: { category },
    }));
}

const { category } = Astro.props;

// Get posts in this category using folder structure
const allPosts = await getCollection('posts', ({ data }) => !data.draft);
const categoryPosts = allPosts.filter(post => {
  // Post ID format is "category/post-slug" based on folder structure
  const postCategory = post.id.split('/')[0];
  return postCategory === category;
});

const sortedPosts = categoryPosts.sort((a, b) =>
    new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
);
---

<BaseLayout
    title={`${category.charAt(0).toUpperCase() + category.slice(1)} Posts - OffroadPakistan`}
    description={`Pakistani adventure and travel stories in the ${category} category from the 4x4 Offroaders Club Karachi`}
>
    <!-- Page Header -->
    <header class="mb-8">
        <h1 class="text-sm font-bold text-gray-600 mb-2">{category.charAt(0).toUpperCase() + category.slice(1)} Posts</h1>
        <p class="text-xs text-gray-700 mb-4">
            Stories and adventures from the 4x4 Offroaders Club Karachi in the {category} category.
        </p>
        <p class="text-xs text-gray-600">
            {sortedPosts.length} posts in this category.
        </p>
    </header>

    <!-- Posts List -->
    <div class="space-y-6">
        {sortedPosts.map((post) => (
            <article class="border-b border-gray-300 pb-4 mb-4">
                <!-- Post Title -->
                <h2 class="text-sm font-bold mb-2">
                    <a href={`/posts/${post.id}/`} class="text-[#00473F] hover:text-[#CC3300]">
                        {post.data.title}
                    </a>
                </h2>

                <!-- Post Meta -->
                <div class="flex items-center gap-4 text-xs text-gray-600 mb-2">
                    <time datetime={post.data.date.toISOString()}>
                        {post.data.date.toLocaleDateString('en-US', {
                            year: 'numeric',
                            month: 'short',
                            day: 'numeric'
                        })}
                    </time>
                    {post.data.author && (
                        <span>By {post.data.author}</span>
                    )}
                </div>

                <!-- Tags -->
                {post.data.tags && post.data.tags.length > 0 && (
                    <div class="text-xs text-gray-500 mb-3">
                        Tags: {post.data.tags.map((tag: string, index: number) => (
                            <span>
                                <span class="text-green-600">{tag}</span>
                                {index < (post.data.tags?.length || 0) - 1 && <span>, </span>}
                            </span>
                        ))}
                    </div>
                )}

                <!-- Read More Link -->
                <div class="text-xs">
                    <a
                        href={`/posts/${post.id}/`}
                        class="text-[#00473F] hover:text-[#CC3300] font-bold"
                    >
                        Read More â†’
                    </a>
                </div>
            </article>
        ))}
    </div>

    {sortedPosts.length === 0 && (
        <div class="text-center py-8">
            <p class="text-gray-600">No posts found in this category.</p>
        </div>
    )}
</BaseLayout>
